package com.jb.backend.webserver.java.j2se.coretechnology.inheritance;
/**
*@author Andy YE
*@date 2018年9月4日上午10:02:08
*
*	实现方式：通过extends关键字，Java继承只能直接继承父类的公有属性和公有方法，而隐含地继承了私有属性
*	定义：在原有类的基础上通过扩展成员来组建一个新类
*	作用：执行拿来主义，软件复用，代码复用，通过继承，进一步扩展新特性，适应新需求。
*	优点：
*	缺点：
*	使用场景：盖房子前，首先是画图纸；图纸规划好，可以造很多个房子。基本图纸也可以通过扩展增加新的特性，建造特点各异的房子
*	前提要点：a.重视is-a关系，类A和类B只有具有is-a关系，才是父子类的关系
*/

public class InheritanceUnderstand {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		InheritanceDerived id = new InheritanceDerived();
		//此对象并没有直接拥有成员属性inheritancebase，而是通过继承得来，而且子类中并没有申明此属性，继承的价值体现在于此
		id.setInheritancebase("I'm the base attribute.");
		System.out.println(id.getInheritancebase());
		id.setInheritanceDerived("I'm the derived attribute.");
		System.out.println(id.getInheritanceDerived());
	}

}

class InheritanceBase{
	private String inheritancebase;

	public String getInheritancebase() {
		return inheritancebase;
	}

	public void setInheritancebase(String inheritancebase) {
		this.inheritancebase = inheritancebase;
	}

	
}

class InheritanceDerived extends InheritanceBase{
	private String inheritanceDerived;

	public String getInheritanceDerived() {
		return inheritanceDerived;
	}

	public void setInheritanceDerived(String inheritanceDerived) {
		this.inheritanceDerived = inheritanceDerived;
	}
	
	
}


